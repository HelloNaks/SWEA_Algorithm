import java.util.Scanner;

public class Solution {
	static int[] p;
	static int[] r;
	static int T, n, m;

	public static void main(String[] args) {
		Scanner scann = new Scanner(System.in);
		T = scann.nextInt();

		for (int t = 1; t <= T; t++) {
			n = scann.nextInt();
			m = scann.nextInt();
			p = new int[n + 1];
			System.out.print("#"+t+" ");
			for (int i = 0; i < n; i++) {
				p[i + 1] = i + 1;
			}
			r = new int[n + 1];
			for (int i = 0; i < n; i++) {
				r[i + 1] = 1;
			}
			for (int i = 0; i < m; i++) {
				int q = scann.nextInt();
				int a = scann.nextInt();
				int b = scann.nextInt();
				if (q == 0) {
					union(a, b);
				} else {
					if(isConn(a, b)) {
						System.out.print("1");
					}else {
						System.out.print("0");
					}
				}
			}
			System.out.println();
		}
	}

	private static boolean isConn(int a, int b) {
		if (find(a) == find(b)) {
			return true;
		} else {
			return false;
		}
	}

	private static int find(int a) {
		if (a == p[a])
			return p[a];
		else
			return p[a] = find(p[a]);
	}

	private static void union(int x, int y) {
		int px = find(x);
		int py = find(y);
		if (isConn(x, y))
			return;
		if (r[px] >= r[py]) {
			p[py] = px;
			r[px] += r[py];
		} else {
			p[px] = py;
			r[py] += r[px];
		}
	}
}
